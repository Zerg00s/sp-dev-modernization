<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="headerImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="ttAuthentication.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ttAuthentication.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>